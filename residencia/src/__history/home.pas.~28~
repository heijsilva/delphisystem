unit home;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error,
  FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.MongoDB, FireDAC.Phys.MongoDBDef,
  FireDAC.VCLUI.Wait, Vcl.ExtCtrls, Vcl.StdCtrls,
  FireDAC.Comp.Client, System.Rtti, System.JSON.Types, System.JSON.Readers,
  System.JSON.BSON, System.JSON.Builders, FireDAC.Phys.MongoDBWrapper, Data.DB;

type
  TForm1 = class(TForm)
    FDConnection1: TFDConnection;
    FDPhysMongoDriverLink1: TFDPhysMongoDriverLink;
    pnlInfo: TPanel;
    btnConexao: TButton;
  private
    procedure ConnectToDatabase; // Declaração do método de conexão
    procedure DisconnectFromDatabase; // Declaração do método de desconexão
  public
    procedure btnConexaoClick(Sender: TObject); // Método para gerenciar a conexão
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

// Conecta ao MongoDB
procedure TForm1.ConnectToDatabase;
begin
  try
    FDConnection1.Connected := True; // Tente conectar
    pnlInfo.Caption := 'Conexão efetuada com sucesso';
    btnConexao.Caption := 'Desconectar';
  except
    on e: Exception do // Captura exceções para falha de conexão
      pnlInfo.Caption := 'Erro ao conectar ao banco de dados' + sLineBreak + e.Message;
  end;
end;

// Desconecta do MongoDB
procedure TForm1.DisconnectFromDatabase;
begin
  FDConnection1.Connected := False; // Desconecta
  btnConexao.Caption := 'Conectar';
  pnlInfo.Caption := 'Efetuado desconexão do MongoDB';
end;

// Método para gerenciar o clique do botão de conexão
procedure TForm1.btnConexaoClick(Sender: TObject);
begin
  if FDConnection1.Connected then
    DisconnectFromDatabase // Se já estiver conectado, desconecta
  else
    ConnectToDatabase; // Caso contrário, conecta
end;

end.
